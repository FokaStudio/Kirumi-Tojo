# Utility, returns a color for the embed based on input
function kirumiColor(s: string) :: color:
	switch {_s}:
		case "error" or "err":
			return dark red
		case "warn" or "warning":
			return yellow
		case "info":
			return light blue
		case "moderation" or "mod":
			return light red
		case "other" or "?":
			return lime

expression Kirumi:
	return type: bot
	get:
		return bot named "Kirumi"

# Effect to log smth to #audit-logs
effect [Kirumi] log %string% as %string% in [guild] %guild%:
	trigger:
		if {db_SI.audit_channel::%discord id of expr-3%} is set:
			make embed:
				set author of the embed to "Kirumi Tojo | %expr-2 in proper case%"
				set author icon of the embed to avatar of bot named "Kirumi"
				set title of the embed to "%expr-2%"
				set description of the embed to "%expr-1%"
				set timestamp of the embed to now
				set footer of the embed to "Kirumi Tojo"
				set color of the embed to kirumiColor(expr-2)
			send last embed to text channel with id {db_SI.audit_channel::%discord id of expr-3%}

effect do nothing:
	trigger:
		stop

function AND(conditions: booleans) :: boolean:
	if {_conditions::*} contains false:
		return false
	return true
	
function OR(conditions: booleans) :: boolean:
	if {_conditions::*} contains true:
		return true
	return false

# Login, startup message and some setup
init:
	create section stored in {_section}:
		clear {internal.status::*}
		set {internal.status::1::text} to "cleaning the config files"
		set {internal.status::1::type} to "playing"
		set {internal.status::2::text} to "%{guild.count}% servers I serve at"
		set {internal.status::2::type} to "watching"
		set {internal.status::3::text} to "to your commands"
		set {internal.status::3::type} to "listening"
	run section {_section} async and wait
	if "Kirumi" is loaded:
		shutdown bot named "Kirumi"
	make new discord bot:
		enable all default intent
		login to "REDACTED" with name "Kirumi"
	wait 1 seconds
	set discord online status of bot named "Kirumi" to online
	create section stored in {_loop}:
		set {_id} to random integer between 1 and 3
		set {_text} to {internal.status::%{_id}%::text}
		set {_type} to {internal.status::%{_id}%::type}
		switch {_type}:
			case "playing":
				set presence of bot named "Kirumi" to playing "%{_text}%"
			case "listening":
				set presence of bot named "Kirumi" to listening "%{_text}%"
			case "watching":
				set presence of bot named "Kirumi" to watching "%{_text}%"
	while "Kirumi" is loaded:
		run section {_loop} async and wait
		wait 15 minutes

# Force smth to log into the audit log channel
discord command log <text> <text>:
	permissions: manage server
	prefixes: !
	usage: !log <error|warn|info|moderation|other> <message>
	category: moderation
	description: <STAFF> Log a message into your guild's log channel (if it exists)
	trigger:
		Kirumi log arg-2 as arg-1 in guild event-guild

on text channel delete:
	if discord id of event-textchannel = {db_SI.audit_channel::%discord id of event-guild%}:
		delete {db_SI.audit_channel::%discord id of event-guild%}

# Basically making Kirumi say a desired line of yours
discord command announce <text>:
	permissions: manage server
	prefixes: !
	usage: !announce <message>
	category: moderation
	description: <STAFF> Make me help you with making announcements (accepts formatting codes that are accesible only to bots, such as [link](URL))
	trigger:
		destroy discord entity event-message
		reply with arg-1

discord command prefix <text>:
	permissions: manage server
	prefixes: !, %{db_SI.prefix::%discord id of event-guild%}%
	description: <STAFF> Set my prefix for commands
	category: Utility
	usage: !prefix <new prefix>
	trigger:
		set {_arg} to arg-1
		if {_arg} = {db_SI.prefix::%discord id of event-guild%}:
			reply with ":x: **My new prefix can't be my old prefix!**"
		else:
			replace all """" in {_arg} with ""
			set {db_SI.prefix::%discord id of event-guild%} to {_arg}
			reply with ":white_check_mark: **Succesfully changed my prefix!**"

on bot join:
	if event-bot = Kirumi:
		add 1 to {guild_count}
		set {db_SI.prefix::%discord id of event-guild%} to "!"
		set {db_SI.%discord id of event-guild%::expconfig::required::1} to 200
		set {db_SI.%discord id of event-guild%::expconfig::multiplier} to 1.5
		set {db_SI.%discord id of event-guild%::expconfig::chance} to 50
		set {db_SI.%discord id of event-guild%::expconfig::min} to 5
		set {db_SI.%discord id of event-guild%::expconfig::max} to 25

on bot leave:
	if event-bot = Kirumi:
		remove 1 from {guild_count}
		if {guild_count} < 0:
			set {guild_count} to 0
		clear {db_SI.%discord id of event-guild%::*}
		clear {tags::%discord id of event-guild%::*}
		clear {tag::%discord id of event-guild%::*}
		delete {db_SI.suggestion_channel::%discord id of event-guild%}
		delete {db_SI.prefix::%discord id of event-guild%}

on message receive:
	set {_m::*} to mentioned members of event-message
	set {_sm} to self member of Kirumi in event-guild
	if {_m::*} contains {_sm}:
		reply to event-message with "Hello %mention tag of event-member%, have you called me?%nl%**My prefix here is %{db_SI.prefix::%discord id of event-guild%}%**%nl%Do __*%{db_SI.prefix::%discord id of event-guild%}%help*__ to get my list of commands%nl%If you would need *any support* with the Bot, join the Discord server of my Master - FokaStudio" with event-bot
