# Copyright © Filip 'FokaStudio' Raczkowski, 2020 - 2021

function colorBox() :: string:
	set {_colors::*} to "red", "orange", "yellow", "green", "blue", "purple"
	return ":%random element of {_colors::*}%_square:"

discord command avatar [<member=%event-member%>]:
	prefixes: %Kirumi discord prefix of event-guild%
	aliases: av, a
	executable in: guild
	usage: avatar [<member>]
	category: general
	description: Grab the Avatar of any member of this guild
	trigger:
		set {_red} to random integer between 1 to 255
		set {_green} to random integer between 1 to 255
		set {_blue} to random integer between 1 to 255
		set {_png}, {_jpg} and {_webp} to "%avatar of arg-1%?size=2048"
		replace ".png" in {_jpg} with ".jpg"
		replace ".png" in {_webp} with ".webp"
		set {_desc::*} to "**Click below for other file formats:**" and "[`.webp`](%{_webp}%) [`.jpg`](%{_jpg}%)"
		make embed:
			set title of embed to "Avatar of %discord name of arg-1%##%tag of arg-1%"
			set embed color of the embed to skript color from rgb {_red}, {_green}, {_blue}
			set description of embed to join {_desc::*} with nl
			set image of embed to "%{_png}%"
			set footer of embed to "Requested by %discord name of event-user%##%tag of event-user%"
			set timestamp of embed to now
		reply to event-message with last embed with event-bot

discord command clyde [<text>]:
	prefixes: %Kirumi discord prefix of event-guild%
	executable in: guild
	category: general
	description: Make my good friend Clyde say something
	trigger:
		set {_arg1} to (arg-1 ? "Include something in the first argument next time!")
		replace all " " with "%%20" in {_arg1}
		reply to event-message with "https://ctk-api.herokuapp.com/clyde/%{_arg1}%" with event-bot

discord command whois [<member=%event-member%>]:
	prefixes: %Kirumi discord prefix of event-guild%
	aliases: userinfo
	category: general
	description: Grab info of one of the members of this server
	trigger:
		make embed:
			set title of embed to "Who is %discord name of arg-1% ?"
			add "`•` Username: %discord name of arg 1%" to {_l::*}
			add "`•` Nick: %discord nick name of arg 1%" to {_l::*}
			add "`•` Tag: %tag of arg 1%" to {_l::*}
			add "`•` Mention: %mention tag of arg 1%" to {_l::*}
			set description of embed to join {_l::*} with nl
			set thumbnail of embed to avatar of arg-1
			set footer of embed to "Asked by %discord name of event-member%"
			set {_color} to main color of (image from url discord user avatar of arg-1)
			set {_color::*} to "%{_color}%" parsed as "color with red %int%, green %int% and blue %int% \(%int%\)"
			set embed color of embed to skript color from rgb {_color::1}, {_color::2}, {_color::3}
			set timestamp of embed to now
		reply to event-message with last embed with event-bot

discord command server [<text>]:
	prefixes: %Kirumi discord prefix of event-guild%
	executable in: guild
	category: minecraft
	usage: server <minecraft server>
	aliases: mcserv, mcserver, serv, serverinfo
	description: Grab all info about any server in a form of a neat embed
	trigger:
		if arg-1 is not set:
			reply to event-message with ":x: **You really should specify 1st argument...**%nl%*EXAMPLE:* ```%Kirumi discord prefix of event-guild%mcserv mc.hypixel.net```" with event-bot
		send http request to "https://api.mcsrvstat.us/2/%arg-1%"
		set {_server} to last http response
		set {_server} to {_server}'s body
		map json {_server} to {_server::*}
		if {_server::error} is set:
			reply to event-message with ":x: **There isn't any server with this IP, try one that actually exist...**" with event-bot
			stop
		if {_server::online} = true:
			make embed:
				set embed color of the embed to light red
				set title of embed to "All info about %arg-1%"
				set description of the embed to "Not sure what Protocol is? Click on the title%Kirumi discord prefix of event-guild%"
				add inline field named ":green_circle: Server Status" with value "Online" to fields of embed
				add inline field named ":pushpin: Online" with value "%{_server::players::online}% / %{_server::players::max}%" to fields of embed
				add inline field named ":compass: Version" with value "%{_server::version}%" to fields of embed
				add inline field named ":lock: Protocol" with value "%{_server::protocol}%" to fields of embed
				add inline field named ":globe_with_meridians: IP" with value "%{_server::ip}%" to fields of embed
				add inline field named ":passport_control: Port" with value "%{_server::port}%" to fields of embed
				add inline field named ":page_facing_up: MOTD" with value "```%{_server::motd::clean::1}%%nl%%{_server::motd::clean::2}%```" to fields of embed
				set the thumbnail of embed to "https://api.minetools.eu/favicon/%arg-1%"
				set title url of embed to "https://wiki.vg/Protocol_version_numbers"
				set the footer of embed to "Requested by %event-user%##%tag of event-user%"
				set the timestamp of embed to now		
			reply to event-message with last embed with event-bot
		else:
			make embed:
				set embed color of the embed to dark red
				set title of embed to "%arg-1% is currently offline"
				set description of embed to "or I am unable to reach it :(%nl%Try searching for the server that is currently online, like **Hypixel**, which is never down"
				set the footer of embed to "Requested by %event-user%##%tag of event-user%"
				set the timestamp of embed to now		
			reply to event-message with last embed with event-bot

discord command search [<text>]:
	prefixes: %Kirumi discord prefix of event-guild%
	executable in: guild
	category: general
	usage: search <query>
	description: Search the web for anything you want 
	trigger:
		if arg-1 is not set:
			reply to event-message with ":x: **Hey, did you forgot about 1st argument again?**" with event-bot
			stop
		reply to event-message with "**Here is all that I found when searching for *%arg-1%***" with event-bot
		set {_arg} to arg-1
		replace all " " in {_arg} with "%%20"
		reply with "https://image.thum.io/get/auth/54133-KirumiTojo/https://google.com/search?q=%{_arg}%" with event-bot

discord command player [<text>]:
	prefixes: %Kirumi discord prefix of event-guild%
	executable in: guild
	aliases: mcplayer, playerinfo
	usage: player <player>
	category: minecraft
	description: Grab any info about a specified player
	trigger:
		if arg-1 is not set:
			reply to event-message with ":x: **Do you really hate that 1st argument? SPECIFY THE PLAYER**" with event-bot
			stop
		send http request to "https://api.minetools.eu/uuid/%arg-1%"
		set {_player} to last http response
		set {_player} to {_player}'s body
		map json {_player} to {_player::*}
		if {_player::error} is set:
			reply to event-message with ":x: **This player doesn't exist**" with event-bot
			stop
		send http request to "https://api.minetools.eu/profile/%{_player::id}%"
		set {_playerinfo} to last http response
		set {_playerinfo} to {_playerinfo}'s body
		map json {_playerinfo} to {_playerinfo::*}
		wait 2 ticks
		if {_playerinfo::decoded::textures::SKIN::metadata::model} is set:
			set {_model} to "slim" 
		else: 
			set {_model} to "normal"
		make embed:
			set embed color of the embed to light red
			set title of embed to "All info about %arg-1%"
			set description of the embed to "Click on the title to go to %arg-1%'s NameMC profile"
			add inline field named ":id: Profile ID" with value "%{_playerinfo::decoded::profileId}%" to fields of embed
			add inline field named ":name_badge: Profile Name" with value "%{_playerinfo::decoded::profileName}%" to fields of embed
			add inline field named ":person_standing: Player Model" with value "%{_model}%" in proper case to fields of embed
			set the thumbnail of embed to "https://visage.surgeplay.com/bust/%{_playerinfo::decoded::profileId}%"
			set title url of embed to "https://namemc.com/profile/%{_playerinfo::decoded::profileName}%"
			set the footer of embed to "Requested by %event-user%##%tag of event-user%"
			set the timestamp of embed to now		
		reply to event-message with last embed with event-bot

function meme(subreddit: string) :: string:
	switch {_subreddit}:
		case "meme":
			set {_url} to "https://meme-api.herokuapp.com/gimme/meme"
		case "comedycemetery":
			set {_url} to "https://meme-api.herokuapp.com/gimme/comedycemetery"
		case "wholesomememes":
			set {_url} to "https://meme-api.herokuapp.com/gimme/wholesomememes"
		case "memes":
			set {_url} to "https://meme-api.herokuapp.com/gimme/memes"
		case "terriblefacebookmemes":
			set {_url} to "https://meme-api.herokuapp.com/gimme/terriblefacebookmemes"
		case "dankmemes":
			set {_url} to "https://meme-api.herokuapp.com/gimme/dankmemes"
	replace all "<" with "&" in {_url}
	return {_url}

discord command meme [<string>]:
	prefixes: %Kirumi discord prefix of event-guild%
	category: fun
	description: Get a meme from a given Subreddit
	usage: %Kirumi discord prefix of event-guild%meme <subreddit>%nl%`<subreddit>` accepts entries like `memes`, `dankmemes`, `wholesomememes`, `meme`, `terriblefacebookmemes` and `comedycemetery` 
	trigger:
		if arg-1 is set:
			if arg-1 != "memes", "dankmemes", "wholesomememes", "meme", "terriblefacebookmemes" or "comedycemetery":
				reply with ":x: **This is not a supported Subreddit!%nl%<:reply:906517020651171860>Do `%Kirumi prefix of event-guild%help meme` for a full list of supported subreddits**"
				stop
			set {sr} to arg-1
		else:
			set {sr} to random element out of "memes", "dankmemes" and "meme"
		broadcast meme({sr}) in world("world")
		send a request to meme({sr}) with headers "User-agent: sky_high"
		map json body of last http response to {_meme::*}
		if {_meme::nsfw} = "true":
			while {_meme::nsfw} = "true":
				send a request to meme({sr}) with headers "User-agent: sky_high"
				map json body of last http response to {_meme::*}
				wait 1 second
		make embed:
			set author of the embed to "%{_meme::author}% • r/%{_meme::subreddit}%"
			set author url of the embed to "https://reddit.com/r/%{_meme::subreddit}%/"
			set title of the embed to "%{_meme::title}%"
			set title url of the embed to "%{_meme::url}%"
			set image of embed to "%{_meme::url}%"
			set timestamp of embed to now
			set footer of embed to "👍%{_meme::ups}% total upvotes"
			set {_red} to random integer between 1 to 255
			set {_green} to random integer between 1 to 255
			set {_blue} to random integer between 1 to 255
			set embed color of the embed to skript color from rgb {_red}, {_green}, {_blue}
		reply with last embed
		delete {sr}