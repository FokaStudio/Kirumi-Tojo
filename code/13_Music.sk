# Copyright © Filip 'FokaStudio' Raczkowski, 2020 - 2021

options:
	light blue: skript color from rgb 51, 173, 255
	magenta: skript color from rgb 221, 38, 229
	red: skript color from rgb 216, 36, 36
	blue: skript color from rgb 52, 51, 255

expression [the] [minute] time (from|of) %number%:
	return type: string
	get:
		set {_n} to rounded expr-1
		set {_t::*} to "%floor({_n}/60)%:%mod({_n}, 60)%" split at ":"
		if length of {_t::2} = 1:
			set {_t::2} to "0%{_t::2}%"
		return "%{_t::1}%:%{_t::2}%"

expression [the] progressbar of %number% and %number% with character %string% with length %integer%:
	return type: string
	get:
		set {_index} to floor(expr-1 / expr-2 * expr-4)
		loop expr-4 times:
			set {_string} to join {_string} and "▬" with ""
		return join {_string}.substring(0, {_index}), expr-3, {_string}.substring({_index}+1)

function toSeconds(time: timespan) :: number:
	return (((unix timestamp of now) - (unix timestamp of ({_time} ago)))/1000)

discord command favorite:
	prefixes: %Kirumi discord prefix of event-guild%
	aliases: favourite, fav
	description: :new: Favorite a track and use it for quick-play later on
	category: music
	usage: %Kirumi discord prefix of event-guild%favorite
	trigger:
		set {_bot} to self member of bot named "Kirumi" in event-guild
		if voice channel of {_bot} is not set:
			reply with ":x: **I am not connected to a voice channel!**"
			stop
		else if bot is playing in event-guild:
			set {_tracks::*} to values "favorite_tracks" from "plugins/DiscordData/user_data/%discord id of event-member%.json" where [input is not ""]
			if size of {_tracks::*} < 3:
				set {_track} to track bot is playing in event-guild
				set {_track.url} to track url of {_track}
				if {_tracks::*} contains {_track.url}:
					reply to event-message with ":x: **You have already favorited that track!**" with event-bot
					stop
				set {_tracks.toadd::*} to {_tracks::*}
				if {_tracks.toadd::1} is not set:
					set {_tracks.toadd::1} to {_track.url}
				else:
					set {_tracks.toadd::*} to {_tracks::*} and {_track.url}
				set value "favorite_tracks" from "plugins/DiscordData/user_data/%discord id of event-member%.json" to {_tracks.toadd::*}
				make embed:
					set title of embed to "⭐Added %{_track}% to your favorite list!"
					set title url of embed to track url of {_track}
					set color of embed to {@magenta}
					set footer of embed to "Asked by %discord name of event-member%##%tag of event-member%"
					set footer icon of embed to avatar of event-member
					set timestamp of embed to now
					set thumbnail of embed to track thumbnail of {_track}
					set description of embed to ":star: This track has been added to your `Favorites`!"
				reply to event-message with last embed with event-bot
			else:
				reply to event-message with ":x: **You can have max 3 favorited tracks!**" with event-bot
		else:
			reply to event-message with ":x: **I am not playing anything! You have to play a track in order for me to favorite it!**" with event-bot

discord command unfavorite [<int>]:
	prefixes: %Kirumi discord prefix of event-guild%
	aliases: favourite
	aliases: unfav
	description: :new: Unfavorite a track *(that one is pretty self-explanatory)*
	category: music
	usage: %Kirumi discord prefix of event-guild%favorite
	trigger:
		set {_bot} to self member of bot named "Kirumi" in event-guild
		set {_tracks::*} to values "favorite_tracks" from "plugins/DiscordData/user_data/%discord id of event-member%.json" where [input is not ""]
		if size of {_tracks::*} > 0:
			if {_tracks::%arg-1%} is not set:
				reply to event-message with ":x: **You don't have a favorited track with that ID associated!**" with event-bot
			else:
				loop {_tracks::*}:
					if loop-value = {_tracks::%arg-1%}:
						continue
					add loop-value to {_newtracks::*}
				set {_newtracks::*} to "" if {_newtracks::1} is not set
				set value "favorite_tracks" from "plugins/DiscordData/user_data/%discord id of event-member%.json" to {_newtracks::*}
				reply to event-message with ":star: **Track removed from your favorites!**" with event-bot
		else:
			reply to event-message with ":x: **You don't have any favorited tracks!**" with event-bot

discord command favorites [<member=%event-member%>]:
	prefixes: %Kirumi discord prefix of event-guild%
	aliases: favourite, favs
	description: :new: List favorite tracks of a specified user
	category: music
	usage: %Kirumi discord prefix of event-guild%favorite
	trigger:
		set {_tracks::*} to values "favorite_tracks" from "plugins/DiscordData/user_data/%discord id of arg-1%.json" where [input is not ""]
		if {_tracks::1} is not set:
			reply to event-message with ":x: **This user has no favorited tracks!**" with event-bot
		else:
			make embed:
				set title of embed to "⭐%arg-1%'s Favorite Tracks"
				set color of embed to {@magenta}
				set footer of embed to "Asked by %discord name of event-member%##%tag of event-member%"
				set footer icon of embed to avatar of event-member
				set timestamp of embed to now
				loop {_tracks::*}:
					search youtube for loop-value and store it in {_r::*}
					add "%loop-index% - [%{_r::1}%](%track url of {_r::1}%)" to {_d::*}
				set description of embed to join {_d::*} with nl
			reply to event-message with last embed with event-bot

discord command play [<string>]:
	prefixes: %Kirumi discord prefix of event-guild%
	aliases: p
	description: Queue a song, the input has to be either a search query or an URL
	category: music
	usage: %Kirumi discord prefix of event-guild%play <input> %nl%(`<input>` field has to be either an URL or YouTube search query)
	trigger:
		set {_bot} to self member of event-bot in event-guild 
		if voice channel of event-member is not set:
			reply with ":x: **You __must__ be in a voice channel in order to join you!**"
			stop
		else if voice channel of {_bot} is not set:
			connect event-bot to voice channel of event-member
			wait 1 second
			unmute self member of bot named "Kirumi" in event-guild
		else if voice channel of event-member != voice channel of {_bot}:
			reply with ":x: **I am already connected to another voice channel!**"
			stop
		if {_bot} doesn't have discord permission (voice mute others) in voice channel of event-member:
			reply with ":x: **I am missing permission ""Mute Members"" in your channel!**%nl%<:reply:906517020651171860> You can fix this by manually asigning this permission to my role or by reusing the OAUTH code to update my perms *(no need to remove the bot from the server)*"
			stop
		if arg 1 is not set:
			reply with ":x: **You __must__ specify an URL or a YouTube input!**"
			stop
		
		set {_i} to 0
		loop "f:", "fav:", "favorite:" and "favourite:":
			add 1 to {_i}
			if first index of loop-value in arg-1 = 1:
				set {_fav::%{_i}%} to true
		if {_fav::*} contains true:
			set {_query::*} to arg-1 parsed as "%text%:%int%"
			set {_tracks::*} to values "favorite_tracks" from "plugins/DiscordData/user_data/%discord id of event-member%.json" where [input is not ""]
			if {_tracks::%{_query::2}%} is not set:
				reply to event-message with ":x: **You don't have a favorited track with that ID associated!**" with event-bot
				stop
			set {_query} to {_tracks::%{_query::2}%}
		else:
			set {_query} to arg-1
		search in youtube for {_query} and store it in {_r::*}
		if arg-1 contain "list=":
			if {_r::*} is not set:
				reply with ":x: **Can't found that playlist!**"
				stop
			play {_r::*} in event-guild with event-bot
			make embed:
				set author of embed to "Successfully added %size of {_r::*}% tracks to your queue!"

				set color of embed to {@blue}
				set author url of embed to arg-1
				set timestamp of embed to now
				set footer of embed to "Asked by %discord name of event-member%##%tag of event-member%"
				set footer icon of embed to avatar of event-member
			reply with last embed
		else:
			if {_r::1} is not set:
				reply with ":x: **Can't find anything for the input '%arg-1%'!**"
				stop
			play {_r::1} in event-guild with event-bot
			set {_track} to {_r::1}
			make embed:
				set title of embed to "%{_track}%"
				set title url of embed to track url of {_track}
				set color of embed to {@light blue}
				set footer of embed to "Asked by %discord name of event-member%##%tag of event-member%"
				set footer icon of embed to avatar of event-member
				set thumbnail of embed to track thumbnail of {_track}
				add "`•` Duration: %track duration of {_track}%" to {_l::*}
				add "`•` Author: %track author of {_track}%" to {_l::*}
				set description of embed to join {_l::*} with nl
				set timestamp of embed to now
			reply with last embed

discord command connect:
	prefixes: %Kirumi discord prefix of event-guild%
	usage: %Kirumi discord prefix of event-guild%connect
	aliases: join
	description: Make me connect to your voice channel
	category: music
	trigger:
		set {_bot} to self member of event-bot in event-guild 
		if voice channel of event-member is not set:
			reply with ":x: **You __must__ be in a voice channel in order to join you!**"
		else if voice channel of {_bot} is not set:
			connect event-bot to voice channel of event-member
		else if voice channel of event-member != voice channel of {_bot}:
			reply with ":x: **I am already connected to another voice channel!**"

discord command repeat:
	prefixes: %Kirumi discord prefix of event-guild%
	usage: %Kirumi discord prefix of event-guild%repeat
	aliases: loop
	description: Turn on/off the song looping
	category: music
	trigger:
		set {_bot} to self member of event-bot in event-guild 
		if voice channel of event-member is not set:
			reply with ":x: **You __must__ be in a voice channel in order to use this command!**"
			stop
		else if voice channel of {_bot} is not set:
			reply with ":x: **I am not in a voice channel! Use `%Kirumi prefix of event-guild%connect` to make me join you!**"
			stop
		else if voice channel of event-member != voice channel of {_bot}:
			reply with ":x: **You __must__ be in a voice channel in order to join you!**"
			stop
		if bot is repeating in event-guild:
			set repeating state of event-guild to false
			set {_name} to "disabled"
		else:
			set repeating state of event-guild to true
			set {_name} to "enabled"
		reply with ":v: **You have `%{_name}%` the repeating of the queue!**"

discord command skip [<int=1>]:
	prefixes: %Kirumi discord prefix of event-guild%
	usage: %Kirumi discord prefix of event-guild%skip <number> %nl%(`<number>` field is default to one)
	description: Skip a number of songs from the queue
	category: music
	trigger:
		set {_bot} to self member of event-bot in event-guild 
		if voice channel of event-member is not set:
			reply with ":x: **You __must__ be in a voice channel in order to use this command!**"
			stop
		else if voice channel of {_bot} is not set:
			reply with ":x: **I am not in a voice channel! Use `%Kirumi prefix of event-guild%connect` to make me join you!**"
			stop
		else if voice channel of event-member != voice channel of {_bot}:
			reply with ":x: **You __must__ be in a voice channel in order to use this command!**"
			stop
		else if bot is not playing in event-guild:
			reply with ":x: **I am not playing anything currently!**"
			stop
		set {_single} to true if arg-1 = 1 ? false 
		loop arg-1 times:
			skip current track of event-guild and store it in {_track}
		set {_} to ""
		set {_} to " Now Playing:" if {_track} is set
		make embed:
			set author of embed to "Successfully skipped the current track!%{_}%" if {_single} = true ? "Successfully skipped %arg-1% tracks!%{_}%"
			if {_track} is set:
				set title of embed to "%{_track}%"
				set title url of embed to track url of {_track}
				set color of embed to {@red}
				set thumbnail of embed to track thumbnail of {_track}
				add "`•` Duration: %track duration of {_track}%" to {_l::*}
				add "`•` Author: %track author of {_track}%" to {_l::*}
			set footer of embed to "Asked by %discord name of event-member%##%tag of event-member%"
			set footer icon of embed to avatar of event-member
			set timestamp of embed to now
		reply with last embed

discord command stop:
	prefixes: %Kirumi discord prefix of event-guild%
	usage: %Kirumi discord prefix of event-guild%stop
	aliases: leave, disconnect
	description: Stop the queue and make me leave the channel
	category: music
	trigger:
		set {_bot} to self member of event-bot in event-guild 
		if voice channel of event-member is not set:
			reply with ":x: **You __must__ be in a voice channel in order to use this command!**"
			stop
		else if voice channel of {_bot} is not set:
			reply with ":x: **I am not in a voice channel! Use `%Kirumi prefix of event-guild%connect` to make me join you!**"
			stop
		else if voice channel of event-member != voice channel of {_bot}:
			reply with ":x: **You __must__ be in a voice channel in order to use this command!**"
			stop
		stop current queue of event-guild
		disconnect bot of event-guild
		make embed:
			set author of embed to "Bye, See you next time 👋"
			set color of embed to {@red}
			set footer of embed to "Asked by %discord name of event-member%##%tag of event-member%"
			set footer icon of embed to avatar of event-member
			set timestamp of embed to now
		reply with last embed

discord command pause:
	prefixes: %Kirumi discord prefix of event-guild%
	usage: %Kirumi discord prefix of event-guild%pause
	description: Pause the music playback
	category: music
	trigger:
		set {_bot} to self member of event-bot in event-guild 
		if voice channel of event-member is not set:
			reply with ":x: **You __must__ be in a voice channel in order to use this command!**"
			stop
		else if voice channel of {_bot} is not set:
			reply with ":x: **I am not in a voice channel! Use `%Kirumi prefix of event-guild%connect` to make me join you!**"
			stop
		else if voice channel of event-member != voice channel of {_bot}:
			reply with ":x: **You __must__ be in a voice channel in order to use this command!**"
			stop
		pause in event-guild
		react to event-message with reaction "pause_button"

discord command resume:
	prefixes: %Kirumi discord prefix of event-guild%
	usage: %Kirumi discord prefix of event-guild%resume
	aliases: unpause
	description: Unpause the music playback
	category: music
	trigger:
		set {_bot} to self member of event-bot in event-guild 
		if voice channel of event-member is not set:
			reply with ":x: **You __must__ be in a voice channel in order to use this command!**"
			stop
		else if voice channel of {_bot} is not set:
			reply with ":x: **I am not in a voice channel! Use `%Kirumi prefix of event-guild%connect` to make me join you!**"
			stop
		else if voice channel of event-member != voice channel of {_bot}:
			reply with ":x: **You __must__ be in a voice channel in order to use this command!**"
			stop
		resume in event-guild
		react to event-message with reaction "arrow_forward"

discord command nowplaying:
	prefixes: %Kirumi discord prefix of event-guild%
	usage: %Kirumi discord prefix of event-guild%nowplaying
	aliases: np
	description: Return all information about the song that is currently playing
	category: music
	trigger:
		set {_track} to track bot is playing in event-guild
		set {_dur} to track duration of {_track}
		set {_dur} to toSeconds({_dur})
		set {_pos} to track position of {_track}
		set {_pos} to toSeconds({_pos})
		make embed:
			set author of embed to "Current track:"
			set title of embed to "%{_track}%"
			set title url of embed to track url of {_track}
			set color of embed to {@light blue}
			set footer of embed to "Asked by %discord name of event-member%##%tag of event-member%"
			set footer icon of embed to avatar of event-member
			set timestamp of embed to now
			set thumbnail of embed to track thumbnail of {_track}
			add "**`•` Duration:** %minute time of {_dur}%    **`•` Position:** %minute time of {_pos}%    **`•` Left:** %minute time of ({_dur} - {_pos})%" to {_l::*}
			add "", "**`•` Author:** %track author of {_track}%" and "" to {_l::*}
			set {_bar} to progressbar of {_pos} and {_dur} with character ":radio_button:" with length 20
			add "┃%{_bar}%┃" to {_l::*}
			set description of embed to join {_l::*} with nl
		reply with last embed

#discord command volume <number>:
#	prefixes: !!
#	trigger:
#		set volume of event-guild to arg-1
#		reply with "Volume changed to %arg-1%"

discord command queue:
	prefixes: %Kirumi discord prefix of event-guild%
	aliases: q
	usage: %Kirumi discord prefix of event-guild%queue
	description: List current songs in the queue
	category: music
	trigger:
		if queue of event-guild is not set:
			reply with ":x: **Cannot found a __queue__ for your current guild!**"
			stop
		make embed:
			set title of embed to "Current Queue:"
			set color of embed to {@magenta}
			set {_track} to track bot is playing in event-guild
			set {_dur} to track duration of {_track}
			set {_dur} to toSeconds({_dur})
			set {_pos} to track position of {_track}
			set {_pos} to toSeconds({_pos})
			set {_bar} to progressbar of {_pos} and {_dur} with character ":radio_button:" with length 25
			add "**NOW PLAYING:** %track title of {_track}%", "┃%{_bar}%┃" and "" to {_l::*}
			set {_i} to 1
			loop queue of event-guild:
				if {_i} is not bigger than 15:
					add "`%{_i}%` :notes: %track title of loop-track%" to {_l::*}
					add 1 to {_i}
				else:
					add "" and ":heavy_plus_sign: *%(size of queue of event-guild - 15)% positions more in the queue*"  to {_l::*}
					exit loop
			loop queue of event-guild:
				set {_dur} to track duration of loop-track
				set {_dur} to toSeconds({_dur})
				add {_dur} to {_total}
			add "" and ":clock1: **Total time: %minute time of {_total}%**" to {_l::*}
			set description of embed to join {_l::*} with nl
			set footer of embed to "Asked by %discord name of event-member%##%tag of event-member%"
			set footer icon of embed to avatar of event-member
			set timestamp of embed to now
		reply with last embed

#discord command audiospeed [<number>]:
#	prefixes: %Kirumi discord prefix of event-guild%
#	trigger:
#		if arg 1 is not set:
#			reply with ":cloud_tornado: **Current __speed__: `%audio speed of event-guild%`**"
#			stop
#		set audio speed of event-guild to arg-1
#		reply with ":cloud_tornado: **The __speed__ has been changed to `%audio speed of event-guild%`!**"

#discord command depth [<number>]:
#	prefixes: %Kirumi discord prefix of event-guild%
#	trigger:
#		if arg 1 is not set:
#			reply with ":deer: **Current __depth__: `%audio depth of event-guild%`**"
#			stop
#		set audio depth of event-guild to arg-1
#		reply with ":deer: **The __depth__ has been changed to `%audio depth of event-guild%`!**"

#discord command pitch [<number>]:
#	prefixes: %Kirumi discord prefix of event-guild%
#	trigger:
#		if arg 1 is not set:
#			reply with ":musical_note: **Current __pitch__: `%audio pitch of event-guild%`**"
#			stop
#		set audio pitch of event-guild to arg-1
#		reply with ":musical_note: **The __pitch__ has been changed to `%audio pitch of event-guild%`!**"

on track end:
	bot is not repeating in event-guild
	skip current track of event-guild
	wait 1 minutes
	if bot is not playing in event-guild:
		disconnect bot of event-guild

on voice leave:
	set {_sm} to self member of bot named "Kirumi" in event-guild
	if event-member != {_sm}:
		wait 1 minute
		event-voicechannel = voice channel of {_sm}
		set {_members::*} to audio members of event-voicechannel
		if OR(check [size of {_members::*} = 1], check [{_members::1} is not set]) = true: #!! Second check is just in case smth goes wrong
			disconnect bot of event-guild
	else:
		stop current queue of event-guild
